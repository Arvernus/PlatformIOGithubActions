name: Dependabot

on:
  workflow_call:
    secrets:
      PLATFORMIO_AUTH_TOKEN:
        required: true

env:
  PLATFORMIO_AUTH_TOKEN: ${{ secrets.PLATFORMIO_AUTH_TOKEN }}
  CI: true
jobs:
  setup:
    name: Setup Dependabot
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: get enviroments and libs from file
        id: analyse_ini
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import re
            with open("plattformio.ini", 'r', encoding="utf-8") as file_in:
              text = file_in.read()
            deff = re.findall(r"default_envs = (.*)", text)
            dic = {}
            dic["default_envs"] = deff[0].split(", ")
            dic["include"] = []
            text = re.sub(r"Â ", r" ", text)
            deff = re.findall(r"\[\s*env:(.*?)].*?lib_deps *= *(.*?)\n[^\s].*?", text, flags=re.DOTALL)
            dic["include"] = {}
            for d in deff:
              dic["include"][d[0]] = re.findall(r"\n\s+([^l\s][^i\s][^b\s][^\s]+)", d[1])
            for d in dic["include"]:
              for i in range(len(dic["include"][d])):
                temp = dic["include"][d][i]
                splitted = re.split("@\^|#", temp)
                try:
                  dic["include"][d][i] = {}
                  dic["include"][d][i][splitted[0]] = splitted[1]
                except:
                  dic["include"][d][i] = splitted[0]
            set_output("matrix", str(dic))
            print("matrix: ", dic)
    outputs:
      matrix: ${{ steps.analyse_ini.outputs.matrix }}

  dependabot:
    name: Dependabot
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio
      - name: Install PlatformIO Core
        run: pio platform update
      - name: Update Library
        run: pio pkg install -l ${{ matrix.lib }}
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Update dependencies'
          commit_user_name: 'dependabot[bot]'
          file_pattern: 'platformio.ini'